{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Anthony/Documents/covid-19_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Anthony/Documents/covid-19_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/Anthony/Documents/covid-19_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Line,Bar}from'react-chartjs-2';import{fetchDailyData}from'../../api';import styles from'./Chart.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";var Chart=function Chart(_ref){var _ref$data=_ref.data,confirmed=_ref$data.confirmed,recovered=_ref$data.recovered,deaths=_ref$data.deaths,country=_ref.country;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),dailyData=_useState2[0],setDailyData=_useState2[1];useEffect(function(){var fetchMyAPI=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var initialDailyData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetchDailyData();case 2:initialDailyData=_context.sent;setDailyData(initialDailyData);case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetchMyAPI(){return _ref2.apply(this,arguments);};}();fetchMyAPI();},[]);var barChart=confirmed?/*#__PURE__*/_jsx(Bar,{data:{labels:['Infected','Recovered','Deaths'],datasets:[{label:'People',backgroundColor:['rgba(0, 0, 255, 0.5)','rgba(0, 255, 0, 0.5)','rgba(255, 0, 0, 0.5)'],data:[confirmed.value,recovered.value,deaths.value]}]},options:{legend:{display:false},title:{display:true,text:\"Current state in \".concat(country)}}}):null;var lineChart=dailyData[0]?/*#__PURE__*/_jsx(Line,{data:{labels:dailyData.map(function(_ref3){var date=_ref3.date;return new Date(date).toLocaleDateString();}),datasets:[{data:dailyData.map(function(data){return data.confirmed;}),label:'Infected',borderColor:'#3333ff',fill:true},{data:dailyData.map(function(data){return data.deaths;}),label:'Deaths',borderColor:'red',backgroundColor:'rgba(255, 0, 0, 0.5)',fill:true},{data:dailyData.map(function(data){return data.recovered;}),label:'Recovered',borderColor:'green',backgroundColor:'rgba(0, 255, 0, 0.5)',fill:true}]}}):null;return/*#__PURE__*/_jsx(\"div\",{className:styles.container,children:country?barChart:lineChart});};export default Chart;","map":{"version":3,"sources":["C:/Users/Anthony/Documents/covid-19_app/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","Line","Bar","fetchDailyData","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchMyAPI","initialDailyData","barChart","labels","datasets","label","backgroundColor","value","legend","display","title","text","lineChart","map","date","Date","toLocaleDateString","borderColor","fill","container"],"mappings":"udAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,IAAT,CAAeC,GAAf,KAA0B,iBAA1B,CAEA,OAASC,cAAT,KAA+B,WAA/B,CAEA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,C,2CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAyD,oBAAtDC,IAAsD,CAA9CC,SAA8C,WAA9CA,SAA8C,CAAnCC,SAAmC,WAAnCA,SAAmC,CAAxBC,MAAwB,WAAxBA,MAAwB,CAAdC,OAAc,MAAdA,OAAc,CACrE,cAAkCX,QAAQ,CAAC,EAAD,CAA1C,wCAAOY,SAAP,eAAkBC,YAAlB,eAEAZ,SAAS,CAAC,UAAM,CACd,GAAMa,CAAAA,UAAU,2FAAG,8KACcV,CAAAA,cAAc,EAD5B,QACXW,gBADW,eAGjBF,YAAY,CAACE,gBAAD,CAAZ,CAHiB,sDAAH,kBAAVD,CAAAA,UAAU,2CAAhB,CAMAA,UAAU,GACX,CARQ,CAQN,EARM,CAAT,CAUA,GAAME,CAAAA,QAAQ,CACZR,SAAS,cACP,KAAC,GAAD,EACE,IAAI,CAAE,CACJS,MAAM,CAAE,CAAC,UAAD,CAAa,WAAb,CAA0B,QAA1B,CADJ,CAEJC,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,QADT,CAEEC,eAAe,CAAE,CAAC,sBAAD,CAAyB,sBAAzB,CAAiD,sBAAjD,CAFnB,CAGEb,IAAI,CAAE,CAACC,SAAS,CAACa,KAAX,CAAkBZ,SAAS,CAACY,KAA5B,CAAmCX,MAAM,CAACW,KAA1C,CAHR,CADQ,CAFN,CADR,CAWE,OAAO,CAAE,CACPC,MAAM,CAAE,CAAEC,OAAO,CAAE,KAAX,CADD,CAEPC,KAAK,CAAE,CAAED,OAAO,CAAE,IAAX,CAAiBE,IAAI,4BAAsBd,OAAtB,CAArB,CAFA,CAXX,EADO,CAiBL,IAlBN,CAqBA,GAAMe,CAAAA,SAAS,CACbd,SAAS,CAAC,CAAD,CAAT,cACE,KAAC,IAAD,EACE,IAAI,CAAE,CACJK,MAAM,CAAEL,SAAS,CAACe,GAAV,CAAc,mBAAGC,CAAAA,IAAH,OAAGA,IAAH,OAAc,IAAIC,CAAAA,IAAJ,CAASD,IAAT,EAAeE,kBAAf,EAAd,EAAd,CADJ,CAEJZ,QAAQ,CAAE,CAAC,CACTX,IAAI,CAAEK,SAAS,CAACe,GAAV,CAAc,SAACpB,IAAD,QAAUA,CAAAA,IAAI,CAACC,SAAf,EAAd,CADG,CAETW,KAAK,CAAE,UAFE,CAGTY,WAAW,CAAE,SAHJ,CAITC,IAAI,CAAE,IAJG,CAAD,CAKP,CACDzB,IAAI,CAAEK,SAAS,CAACe,GAAV,CAAc,SAACpB,IAAD,QAAUA,CAAAA,IAAI,CAACG,MAAf,EAAd,CADL,CAEDS,KAAK,CAAE,QAFN,CAGDY,WAAW,CAAE,KAHZ,CAIDX,eAAe,CAAE,sBAJhB,CAKDY,IAAI,CAAE,IALL,CALO,CAWN,CACFzB,IAAI,CAAEK,SAAS,CAACe,GAAV,CAAc,SAACpB,IAAD,QAAUA,CAAAA,IAAI,CAACE,SAAf,EAAd,CADJ,CAEFU,KAAK,CAAE,WAFL,CAGFY,WAAW,CAAE,OAHX,CAIFX,eAAe,CAAE,sBAJf,CAKFY,IAAI,CAAE,IALJ,CAXM,CAFN,CADR,EADF,CAyBI,IA1BN,CA6BA,mBACE,YAAK,SAAS,CAAE3B,MAAM,CAAC4B,SAAvB,UACGtB,OAAO,CAAGK,QAAH,CAAcU,SADxB,EADF,CAKD,CApED,CAsEA,cAAepB,CAAAA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  const lineChart = (\r\n    dailyData[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => new Date(date).toLocaleDateString()),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          },  {\r\n            data: dailyData.map((data) => data.recovered),\r\n            label: 'Recovered',\r\n            borderColor: 'green',\r\n            backgroundColor: 'rgba(0, 255, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}